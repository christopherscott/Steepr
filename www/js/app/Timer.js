// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(["jquery", "use!backbone"], function($, Backbone) {
    var Timer;
    return Timer = (function(_super) {

      __extends(Timer, _super);

      Timer.name = 'Timer';

      function Timer() {
        return Timer.__super__.constructor.apply(this, arguments);
      }

      Timer.prototype.initialize = function() {
        return this.bind("change:total", this.setDivs, this);
      };

      Timer.prototype.setDivs = function(model, secs, options) {
        var hundreths, mins;
        mins = (secs > 60 ? Math.floor(secs / 60) : 0);
        secs = (secs - (60 * mins)) - 1;
        hundreths = 99;
        return this.set({
          mins: mins,
          secs: secs,
          hundreths: hundreths
        });
      };

      Timer.prototype.start = function() {
        var h, interval, m, s;
        h = this.get("hundreths");
        s = this.get("secs");
        m = this.get("mins");
        interval = setInterval(function() {
          if (h > 0) {
            return h = h - 1;
          } else {
            if (s > 0) {
              s = s - 1;
              return h = 99;
            } else {
              if (m > 0) {
                m = m - 1;
                s = 59;
                return h = 99;
              } else {

              }
            }
          }
        }, 10);
        return interval;
      };

      return Timer;

    })(Backbone.Model);
  });

}).call(this);
